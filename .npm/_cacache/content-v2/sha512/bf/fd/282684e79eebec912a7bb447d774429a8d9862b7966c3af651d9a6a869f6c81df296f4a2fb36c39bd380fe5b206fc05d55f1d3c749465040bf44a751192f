{"_id":"@scure/base","_rev":"10-55bed42e786dbd60a5c7cbe5140cb669","name":"@scure/base","description":"Secure, audited & 0-dep implementation of base64, bech32, base58, base32 & base16","dist-tags":{"latest":"1.1.7"},"versions":{"1.0.0-rc1":{"name":"@scure/base","version":"1.0.0-rc1","keywords":["bech32","bech32m","base64","base58","base32","base16","rfc4648","rfc3548","crockford","encode","encoder","base-x","base"],"author":{"url":"https://paulmillr.com","name":"Paul Miller"},"license":"MIT","_id":"@scure/base@1.0.0-rc1","maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"homepage":"https://github.com/paulmillr/scure-base","bugs":{"url":"https://github.com/paulmillr/scure-base/issues"},"dist":{"shasum":"b45ddc88d49b13950f149fbc8d6f9c27ad594d97","tarball":"https://registry.npmjs.org/@scure/base/-/base-1.0.0-rc1.tgz","fileCount":5,"integrity":"sha512-9H5FDYu9D/X04seD9SKR6VE7/rX8AUSyMk3x6Upp+CrPv3FL6D/H3lhqMmgSZAWgAkVwr1bpeBpcxh6FSpfTbw==","signatures":[{"sig":"MEYCIQCiwlw/kdZvYbsG7zrn+AyEIYrC6p5Wb8fLWgSfgm4rkAIhAKbIRCJbjQIUOyGvch0wDdqoRXgeIr5N34TX7JPhxN+R","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":28603,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh5flqCRA9TVsSAnZWagAAeJYP+QDdxnTKUBFDTmA/ZlcT\n+k2ZkLyFuchvmuXDhAingmXcZZp+bVZXmolaNM2LXQugIniSbIBF+NbLi+HG\ne2YIAz2rSLej0ZsEgVvys+qU/fqQZb6cENikNj3xCxBvYeNv6x2rIhNIqCB7\nUGKX8if6zP8f8V++ZHxy7kDokdTcBQX9WRC78KEWW/0w2mNdUdM29BgY4WYn\nCCG6YmiEwRxWC230YjJlujqNjj6tAcFG+cKUoQup+myZU6aBPMQEhdFsZFv2\nSZ5KA/aUSr8EFlopxAwn52Z0mKGDOGRAzfdZdOuc5lV3v0rEpiADP++n3HJJ\nREyE9AaLLAuBkNG2wNKk5tMVaHa2NvxETKoLzQxd2sHar3OTh91Mu6fsW02V\njCiq8+acBAX+oQGIaq8ybnaKPlzsv7/K+lyEB3K1xVKD83rvwa2OiuJeb55F\nNhGoIBGAQF6B0eAutqcgk5vGNtrUpkgAwQ0wGM2TxPVDmCJVkitKMrfPgXJL\n0ijm3YrAt1uGi4JyLHRRkC5dH8NIzQNeG8ghXBP14pLkSUNHBZfckzfOwm/V\nqfxmPtAq7lT7+axmXCTnbXcNP++VDqVxCgUXN0adbRrVy9l2EdWYff6mCE2d\n2ABVtg2NwdcdKDs8XQit8075vyPNqTSStMrYz5bdm3Dc4/VZBOuqcXZdKPrD\nw7bd\r\n=K/NT\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","types":"index.d.ts","gitHead":"63d3007619763f98d5632679f0ded0746dbf459c","scripts":{"lint":"prettier --print-width 100 --single-quote --check index.ts","test":"node test/index.js","bench":"node test/benchmark/index.js","build":"tsc -d"},"_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"repository":{"url":"git+https://github.com/paulmillr/scure-base.git","type":"git"},"_npmVersion":"8.1.2","description":"Secure, audited & 0-dep implementation of bech32, base64, base58, base32 & base16","directories":{},"_nodeVersion":"16.13.1","_hasShrinkwrap":false,"devDependencies":{"prettier":"^2.3.2","typescript":"4.5.4","micro-should":"^0.2.0"},"_npmOperationalInternal":{"tmp":"tmp/base_1.0.0-rc1_1642461545881_0.5527630551340144","host":"s3://npm-registry-packages"}},"1.0.0":{"name":"@scure/base","version":"1.0.0","keywords":["bech32","bech32m","base64","base58","base32","base16","rfc4648","rfc3548","crockford","encode","encoder","base-x","base"],"author":{"url":"https://paulmillr.com","name":"Paul Miller"},"license":"MIT","_id":"@scure/base@1.0.0","maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"homepage":"https://github.com/paulmillr/scure-base","bugs":{"url":"https://github.com/paulmillr/scure-base/issues"},"dist":{"shasum":"109fb595021de285f05a7db6806f2f48296fcee7","tarball":"https://registry.npmjs.org/@scure/base/-/base-1.0.0.tgz","fileCount":5,"integrity":"sha512-gIVaYhUsy+9s58m/ETjSJVKHhKTBMmcRb9cEV5/5dwvfDlfORjKrFsDeDHWRrm6RjcPvCLZFwGJjAjLj1gg4HA==","signatures":[{"sig":"MEQCIGju/EyWTE9tA0/JHNoY9PPbJUk6rRiwwnDtu6SyZxvKAiBMx9jBLkuqHOrm5plY9HsXjmJvmsQetP+hkH8msTH8ig==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":28684,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.13\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJh8VykCRA9TVsSAnZWagAAqvcP/izZDp98b3LZOwqNzJO7\nKvBA5IxUrdQ+cpPJI7R5/xdEsvl2laCqowdXlpaIFI5c353Whk1OqyoTe4/7\nRXFZiKm+JBd/GS8fXlkMrYD6BzTW3vxFIASuMvPNr3Vq2jtpY3UVNjqHsJrx\n3wqkY848f+TRJ4AJ49mCz2R7nh7OfUGF4Ay/b32MywJBlRe2Fl4g1eUDjRfN\njTAqnpSwIuj6Elr+Hn6gdd/ChRxC65MLoPxGwgl7zhoraAmQ2c3FhFMuBaEB\nyAwccCpxjMSRK7Z6qsKQ5tah4eQD9mnxW3h9aphohSL1RrdpGpf4z4UThxxT\nDkXC6lgnqefUddJEAVPmusIJuDjOy3xMMDsdSmEOpSwKhp2PvIUhbErN8XuV\nFtm1uEvJ/WP/YONLtZXGLyKd6Y1El5wR9MUj/oY3Fdn60Usz14wpPeQX+p3k\n8cmTeO6l+x1hUWLLcbWRfhv3Fp0YDUuqvwBfYFPz9P5xh0atxEKiEFkqAShG\n9923MIcmx1/0jtALkYVjQ/UHzGyuguuQa31LAD0WaR/RKwDWvZrlG6L8bLhI\nISa9hpD63ym0rjKZutpJVZHXNuFKIK8gXOsHEN7d+gIMrFhqSV1rBL3AsYku\n8LssPrwkt4fxEE/VWG3KYNXTR6sT8VbmnKQm/VbILdig+k6ruZRqQy+efYSv\nsS2M\r\n=PyQF\r\n-----END PGP SIGNATURE-----\r\n"},"main":"index.js","types":"index.d.ts","funding":[{"url":"https://paulmillr.com/funding/","type":"individual"}],"gitHead":"1bb211ce338e83293eee4b828842ed3ce735ea27","scripts":{"lint":"prettier --check index.ts","test":"node test/index.js","bench":"node test/benchmark/index.js","build":"tsc -d"},"_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"repository":{"url":"git+https://github.com/paulmillr/scure-base.git","type":"git"},"_npmVersion":"8.3.2","description":"Secure, audited & 0-dep implementation of bech32, base64, base58, base32 & base16","directories":{},"_nodeVersion":"16.13.2","_hasShrinkwrap":false,"devDependencies":{"prettier":"2.4.1","typescript":"4.5.4","micro-should":"0.2.0"},"_npmOperationalInternal":{"tmp":"tmp/base_1.0.0_1643207844526_0.174717639744157","host":"s3://npm-registry-packages"}},"1.1.0":{"name":"@scure/base","version":"1.1.0","keywords":["bech32","bech32m","base64","base58","base32","base16","rfc4648","rfc3548","crockford","encode","encoder","base-x","base"],"author":{"url":"https://paulmillr.com","name":"Paul Miller"},"license":"MIT","_id":"@scure/base@1.1.0","maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"homepage":"https://github.com/paulmillr/scure-base","bugs":{"url":"https://github.com/paulmillr/scure-base/issues"},"dist":{"shasum":"f57b24ea3b69fc37ba96906358fb29806415aaa0","tarball":"https://registry.npmjs.org/@scure/base/-/base-1.1.0.tgz","fileCount":6,"integrity":"sha512-fJM8qIUzIDvZsWAj8psBGnR7hcTunIYsXI5Ulmj7I/jv9j9oqan/mg/UwB+ucYsA5ppIkBazFmsWdoi0+9qPtA==","signatures":[{"sig":"MEUCIBSGv2kXdNjOk0oET8O/zvJCgTmJo8GvEYcsmTiW84mQAiEA5kpw+9EGH9WIaK3yXBCTBwJs1iiBbdlup1fRYTnGBrU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":45939,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJipSCzACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2VmpFyRAAiey+z9/we09B4BOP7tpTrvlcffzakJBuC+eICT6WJXElq+vj\r\n4zcv1VNkxcy6mwqnLplvph8G4LEeE0UwBpstP0e9wGGEpb7T1FtZsC9fXwmN\r\nrctKJunm41mdBWx9hH8ITTthc5eVmWN37Mk7mn0QOg+tC2xfUyKaCJaN3pm7\r\ng0aridB8XqjttPQs23CBTb2o+L8kCTCxT2cmw2nBLYVsCaxQ8ON/rdsKWO2L\r\nvSwvA4sxKrXm6oYes0dtav324wHOmPd/KHuyot4FvAez9wjNVObeoE65mpDg\r\n+F2qj6MtcUXbBhnhCojK3yUUmYWGxqT/pqxvP1dnr3htRqjQKb0U1OLp8+Zt\r\nzk0NhlbjHMLAwy+8HRtiCP1rkz6G2ql3ubwM9XTNvP8mwyMciKlX5rRWqcPo\r\nFP/qS8OzJjtmR64XfqG4UiXK0smC1nZELK2WSxczKe5KlwROUMWFW4CkGysV\r\nxtvGu7vMHsjS/NUQf2+OPdw61+M2y/UPs4FhFwQJXRi+YxJUem1qdsEwG0el\r\n3GIDF3AmxoTFTExxkZNdlqI+Le+0Bj6ItbVThM7y9jlOpiinHjsQMkctOfeN\r\nPj2E8qJKrmXzV2HH9fOEQ2Bn2R5ooi21Yxo4AuuNwffkV3mrEsg8/k3sFgDT\r\nf6v7y9WeXdBHFi/IJDW8rHgEhbZLrAtYAQM=\r\n=lP8i\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","types":"lib/index.d.ts","module":"lib/esm/index.js","exports":{".":{"import":"./lib/esm/index.js","default":"./lib/index.js"},"./index.d.ts":"./lib/index.d.ts"},"funding":[{"url":"https://paulmillr.com/funding/","type":"individual"}],"gitHead":"80597c55d6e374e5b28fe9ddc84a6c3f8ff3a029","scripts":{"lint":"prettier --check index.ts","test":"node test/index.js","bench":"node test/benchmark/index.js","build":"tsc -d && tsc -p tsconfig.esm.json"},"_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"repository":{"url":"git+https://github.com/paulmillr/scure-base.git","type":"git"},"_npmVersion":"8.5.5","description":"Secure, audited & 0-dep implementation of bech32, base64, base58, base32 & base16","directories":{},"_nodeVersion":"16.15.0","_hasShrinkwrap":false,"devDependencies":{"prettier":"2.6.2","typescript":"4.7.3","micro-should":"0.2.0"},"_npmOperationalInternal":{"tmp":"tmp/base_1.1.0_1654988979049_0.6568862223667353","host":"s3://npm-registry-packages"}},"1.1.1":{"name":"@scure/base","version":"1.1.1","keywords":["bech32","bech32m","base64","base58","base32","base16","rfc4648","rfc3548","crockford","encode","encoder","base-x","base"],"author":{"url":"https://paulmillr.com","name":"Paul Miller"},"license":"MIT","_id":"@scure/base@1.1.1","maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"homepage":"https://github.com/paulmillr/scure-base","bugs":{"url":"https://github.com/paulmillr/scure-base/issues"},"dist":{"shasum":"ebb651ee52ff84f420097055f4bf46cfba403938","tarball":"https://registry.npmjs.org/@scure/base/-/base-1.1.1.tgz","fileCount":7,"integrity":"sha512-ZxOhsSyxYwLJj3pLZCefNitxsj093tb2vq90mp2txoYeBqbcjDjqFhyM8eUjq/uFm6zJ+mUuqxlS2FkuSY1MTA==","signatures":[{"sig":"MEUCIQD5etVxAuf4Nakw6vVcmTUy6M3ZizzWEAKTamCRV7c5VAIgMsk8skSPdS15tdUeb1f6m8C3SOB1d50SGZkzjSPKUKc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":46440,"npm-signature":"-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v4.10.10\r\nComment: https://openpgpjs.org\r\n\r\nwsFzBAEBCAAGBQJiqbJVACEJED1NWxICdlZqFiEECWMYAoorWMhJKdjhPU1b\r\nEgJ2Vmq8zw//fMVbO3mxk8zIY2y+PE0ZECbByckre27Jcx9JBInK5UXgk4Nn\r\ngystx+dbEhaOcIHDj3XhKNlAydv69BUwybWF7iXGcGf3gVC9dEH1lsxLkokF\r\n7l77CkxigH1v1vl7YPNBeM4w9IC8u9skyY4m3WbmPxveqD0nyR4FQJ0jXDJd\r\nhum/ANmLP5JDEOZZlKEHcUkKix6qUolAXbphky/QJC1M0W8ufAUTYeKMzSeD\r\n0vx0vdfh6j3qnwrerUgt2j2OnzyQSzHm5ai41AwrqqdeLTMKj9qyguYJODai\r\nk7HE4jFWmmd/YFxpjsY3xmuaGAWVBU5uF3oG7wzOOYlI5tXXuzVv7LDrYQL8\r\nYNZl8jd+4IoFT28WTZXyAiYYT8FyZpQj7HoEueEvnFMSZRvK5OYepdiWuDJE\r\n1mYzpNoHfqeWfEYpbdn3kcU4xZgI9e/O/FlVZ+A9yAkGZ4p0x/Zxed08369x\r\n3sixxCVzpdIuTb4+hCb3FgfXtZBHUrOwGrj9jFyWKhMgIc0IQDn28pNeI0Pc\r\n0+PToq2t1iLhkCSoYU1LxAHGp4cdTHUP6pKqP1ammtlRm5pOcRb3U3y62kX2\r\nMHbAiU756Fp/Zjw+F/sAWJUvAjumR5ZrxjUZSkGlevaz3XENFXDebTnYshYa\r\nm1GQRXmPjPAuYCy2SmwbhiU6CYAOx++agUk=\r\n=Ly7X\r\n-----END PGP SIGNATURE-----\r\n"},"main":"lib/index.js","types":"lib/index.d.ts","module":"lib/esm/index.js","exports":{".":{"import":"./lib/esm/index.js","default":"./lib/index.js"},"./index.d.ts":"./lib/index.d.ts"},"funding":[{"url":"https://paulmillr.com/funding/","type":"individual"}],"gitHead":"22227b05dc0fc0bb64f3bda40128eb793f68c72c","scripts":{"lint":"prettier --check index.ts","test":"node test/index.js","bench":"node test/benchmark/index.js","build":"tsc -d && tsc -p tsconfig.esm.json"},"_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"repository":{"url":"git+https://github.com/paulmillr/scure-base.git","type":"git"},"_npmVersion":"8.5.5","description":"Secure, audited & 0-dep implementation of bech32, base64, base58, base32 & base16","directories":{},"_nodeVersion":"16.15.0","_hasShrinkwrap":false,"devDependencies":{"prettier":"2.6.2","typescript":"4.7.3","micro-should":"0.2.0"},"_npmOperationalInternal":{"tmp":"tmp/base_1.1.1_1655288405450_0.24532510927626694","host":"s3://npm-registry-packages"}},"1.1.2":{"name":"@scure/base","version":"1.1.2","keywords":["bech32","bech32m","base64","base58","base32","base16","rfc4648","rfc3548","crockford","encode","encoder","base-x","base"],"author":{"url":"https://paulmillr.com","name":"Paul Miller"},"license":"MIT","_id":"@scure/base@1.1.2","maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"homepage":"https://paulmillr.com/noble/#scure","bugs":{"url":"https://github.com/paulmillr/scure-base/issues"},"dist":{"shasum":"ff0cf51874aaf176490c9cb46e4df807a2e581d2","tarball":"https://registry.npmjs.org/@scure/base/-/base-1.1.2.tgz","fileCount":9,"integrity":"sha512-sSCrnIdaUZQHhBxZThMuk7Wm1TWzMD3uJNdGgx3JS23xSqevu0tAOsg8k66nL3R2NwQe65AI9GgqpPOgZys/eA==","signatures":[{"sig":"MEQCIE7p/q3BZX3Jf9X+Bp9A5rkJU6bO4/O8SY70TqNbGhEnAiBlozuj1mdbExNHKdOz9FIKhYGuM1Y5W9BZmgq40/QUdA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@scure%2fbase@1.1.2","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":77563},"main":"lib/index.js","types":"lib/index.d.ts","module":"lib/esm/index.js","exports":{".":{"types":"./lib/index.d.ts","import":"./lib/esm/index.js","default":"./lib/index.js"}},"funding":"https://paulmillr.com/funding/","gitHead":"7b937a16faf94bf0889351360b2fe2ef201efed9","scripts":{"lint":"prettier --check index.ts","test":"node test/index.js","bench":"node test/benchmark/index.js","build":"tsc && tsc -p tsconfig.esm.json","format":"prettier --write index.ts","test:deno":"deno test test/deno.ts"},"_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"repository":{"url":"git+https://github.com/paulmillr/scure-base.git","type":"git"},"_npmVersion":"9.8.1","description":"Secure, audited & 0-dep implementation of base64, bech32, base58, base32 & base16","directories":{},"sideEffects":false,"_nodeVersion":"20.5.1","_hasShrinkwrap":false,"devDependencies":{"prettier":"2.8.4","typescript":"5.0.2","micro-should":"0.4.0"},"_npmOperationalInternal":{"tmp":"tmp/base_1.1.2_1693002928577_0.8204924766841513","host":"s3://npm-registry-packages"}},"1.1.3":{"name":"@scure/base","version":"1.1.3","keywords":["bech32","bech32m","base64","base58","base32","base16","rfc4648","rfc3548","crockford","encode","encoder","base-x","base"],"author":{"url":"https://paulmillr.com","name":"Paul Miller"},"license":"MIT","_id":"@scure/base@1.1.3","maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"homepage":"https://paulmillr.com/noble/#scure","bugs":{"url":"https://github.com/paulmillr/scure-base/issues"},"dist":{"shasum":"8584115565228290a6c6c4961973e0903bb3df2f","tarball":"https://registry.npmjs.org/@scure/base/-/base-1.1.3.tgz","fileCount":9,"integrity":"sha512-/+SgoRjLq7Xlf0CWuLHq2LUZeL/w65kfzAPG5NH9pcmBhs+nunQTn4gvdwgMTIXnt9b2C/1SeL2XiysZEyIC9Q==","signatures":[{"sig":"MEYCIQCu7+0m/4J2PqAmPCRXDEh+9jaB3Oo+hzGUBRNOHSv/qwIhAI0zg73RuZw54oJCFhoqB7ZX+IEYC/SspefQ1wHtP70T","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@scure%2fbase@1.1.3","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":77757},"main":"lib/index.js","types":"lib/index.d.ts","module":"lib/esm/index.js","exports":{".":{"types":"./lib/index.d.ts","import":"./lib/esm/index.js","default":"./lib/index.js"}},"funding":"https://paulmillr.com/funding/","gitHead":"4d9f31ba57071f85a39411a7b0e892c54ca9f17f","scripts":{"lint":"prettier --check index.ts","test":"node test/index.js","bench":"node test/benchmark/index.js","build":"tsc && tsc -p tsconfig.esm.json","format":"prettier --write index.ts","test:deno":"deno test test/deno.ts"},"_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"repository":{"url":"git+https://github.com/paulmillr/scure-base.git","type":"git"},"_npmVersion":"9.8.1","description":"Secure, audited & 0-dep implementation of base64, bech32, base58, base32 & base16","directories":{},"sideEffects":false,"_nodeVersion":"20.5.1","_hasShrinkwrap":false,"devDependencies":{"prettier":"2.8.4","typescript":"5.0.2","micro-should":"0.4.0"},"_npmOperationalInternal":{"tmp":"tmp/base_1.1.3_1693445108417_0.7004492486867198","host":"s3://npm-registry-packages"}},"1.1.4":{"name":"@scure/base","version":"1.1.4","keywords":["bech32","bech32m","base64","base58","base32","base16","rfc4648","rfc3548","crockford","encode","encoder","base-x","base"],"author":{"url":"https://paulmillr.com","name":"Paul Miller"},"license":"MIT","_id":"@scure/base@1.1.4","maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"homepage":"https://paulmillr.com/noble/#scure","bugs":{"url":"https://github.com/paulmillr/scure-base/issues"},"dist":{"shasum":"cb6a3552ee15595d9864a0a4e89ffcd21ebe8c39","tarball":"https://registry.npmjs.org/@scure/base/-/base-1.1.4.tgz","fileCount":9,"integrity":"sha512-wznebWtt+ejH8el87yuD4i9xLSbYZXf1Pe4DY0o/zq/eg5I0VQVXVbFs6XIM0pNVCJ/uE3t5wI9kh90mdLUxtw==","signatures":[{"sig":"MEUCIAKzn1h7FTyNUqcOP/GNMArYRAUkSESRWgQ/aULyFRR1AiEAsOTjysn3fujWqHepV6Nb4SkVHL5f2d1GhQS4RZ/FBVA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@scure%2fbase@1.1.4","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":78206},"main":"lib/index.js","types":"lib/index.d.ts","module":"lib/esm/index.js","exports":{".":{"types":"./lib/index.d.ts","import":"./lib/esm/index.js","default":"./lib/index.js"}},"funding":"https://paulmillr.com/funding/","gitHead":"14f905993aad35031df74297ab865260c465eea6","scripts":{"lint":"prettier --check index.ts","test":"node test/index.js","bench":"node test/benchmark/index.js","build":"tsc && tsc -p tsconfig.esm.json","format":"prettier --write index.ts","test:deno":"deno test test/deno.ts"},"_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"repository":{"url":"git+https://github.com/paulmillr/scure-base.git","type":"git"},"_npmVersion":"10.2.5","description":"Secure, audited & 0-dep implementation of base64, bech32, base58, base32 & base16","directories":{},"sideEffects":false,"_nodeVersion":"20.10.0","_hasShrinkwrap":false,"devDependencies":{"prettier":"3.1.1","typescript":"5.3.2","micro-should":"0.4.0"},"_npmOperationalInternal":{"tmp":"tmp/base_1.1.4_1702339189184_0.26166251128617013","host":"s3://npm-registry-packages"}},"1.1.5":{"name":"@scure/base","version":"1.1.5","keywords":["bech32","bech32m","base64","base58","base32","base16","rfc4648","rfc3548","crockford","encode","encoder","base-x","base"],"author":{"url":"https://paulmillr.com","name":"Paul Miller"},"license":"MIT","_id":"@scure/base@1.1.5","maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"homepage":"https://paulmillr.com/noble/#scure","bugs":{"url":"https://github.com/paulmillr/scure-base/issues"},"dist":{"shasum":"1d85d17269fe97694b9c592552dd9e5e33552157","tarball":"https://registry.npmjs.org/@scure/base/-/base-1.1.5.tgz","fileCount":9,"integrity":"sha512-Brj9FiG2W1MRQSTB212YVPRrcbjkv48FoZi/u4l/zds/ieRrqsh7aUf6CLwkAq61oKXr/ZlTzlY66gLIj3TFTQ==","signatures":[{"sig":"MEUCIGSf9fdlt3bV08LhKrxSgKCGj5b4mMNebtap/XYsAbLSAiEA3oP4BZjXMycw8ShjpuJIl8u/zyjSVyCT87TlAjUpul4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@scure%2fbase@1.1.5","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":79441},"main":"lib/index.js","types":"lib/index.d.ts","module":"lib/esm/index.js","exports":{".":{"types":"./lib/index.d.ts","import":"./lib/esm/index.js","default":"./lib/index.js"}},"funding":"https://paulmillr.com/funding/","gitHead":"b66f8da55517fc128f082eae71983ba8b3e89e6c","scripts":{"lint":"prettier --check index.ts","test":"node test/index.js","bench":"node test/benchmark/index.js","build":"tsc && tsc -p tsconfig.esm.json","format":"prettier --write index.ts","test:deno":"deno test test/deno.ts"},"_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"repository":{"url":"git+https://github.com/paulmillr/scure-base.git","type":"git"},"_npmVersion":"10.2.5","description":"Secure, audited & 0-dep implementation of base64, bech32, base58, base32 & base16","directories":{},"sideEffects":false,"_nodeVersion":"20.10.0","_hasShrinkwrap":false,"devDependencies":{"prettier":"3.1.1","typescript":"5.3.2","micro-should":"0.4.0"},"_npmOperationalInternal":{"tmp":"tmp/base_1.1.5_1702458958543_0.47048184514958424","host":"s3://npm-registry-packages"}},"1.1.6":{"name":"@scure/base","version":"1.1.6","keywords":["bech32","bech32m","base64","base58","base32","base16","rfc4648","rfc3548","crockford","encode","encoder","base-x","base"],"author":{"url":"https://paulmillr.com","name":"Paul Miller"},"license":"MIT","_id":"@scure/base@1.1.6","maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"homepage":"https://paulmillr.com/noble/#scure","bugs":{"url":"https://github.com/paulmillr/scure-base/issues"},"dist":{"shasum":"8ce5d304b436e4c84f896e0550c83e4d88cb917d","tarball":"https://registry.npmjs.org/@scure/base/-/base-1.1.6.tgz","fileCount":9,"integrity":"sha512-ok9AWwhcgYuGG3Zfhyqg+zwl+Wn5uE+dwC0NV/2qQkx4dABbb/bx96vWu8NSj+BNjjSjno+JRYRjle1jV08k3g==","signatures":[{"sig":"MEQCIEJe3WHryiYTQpcxKOkB8zjKv3PL59yDwg6sIc4qfxF4AiBrNeWRSMWM15fIctjD+nA/oKFmy7K8iYgVP7TZss57Kg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@scure%2fbase@1.1.6","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"unpackedSize":80359},"main":"lib/index.js","types":"lib/index.d.ts","module":"lib/esm/index.js","exports":{".":{"types":"./lib/index.d.ts","import":"./lib/esm/index.js","default":"./lib/index.js"}},"funding":"https://paulmillr.com/funding/","gitHead":"713480919ce9643cdf1a89ddbfb8e0f40dea87e4","scripts":{"lint":"prettier --check index.ts","test":"node test/index.js","bench":"node test/benchmark/index.js","build":"tsc && tsc -p tsconfig.esm.json","format":"prettier --write index.ts","test:deno":"deno test test/deno.ts"},"_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"repository":{"url":"git+https://github.com/paulmillr/scure-base.git","type":"git"},"_npmVersion":"10.5.0","description":"Secure, audited & 0-dep implementation of base64, bech32, base58, base32 & base16","directories":{},"sideEffects":false,"_nodeVersion":"20.11.1","_hasShrinkwrap":false,"devDependencies":{"prettier":"3.1.1","typescript":"5.3.2","micro-should":"0.4.0","@paulmillr/jsbt":"0.1.0"},"_npmOperationalInternal":{"tmp":"tmp/base_1.1.6_1710945262353_0.6840565536583303","host":"s3://npm-registry-packages"}},"1.1.7":{"name":"@scure/base","version":"1.1.7","description":"Secure, audited & 0-dep implementation of base64, bech32, base58, base32 & base16","main":"lib/index.js","module":"lib/esm/index.js","types":"lib/index.d.ts","exports":{".":{"types":"./lib/index.d.ts","import":"./lib/esm/index.js","default":"./lib/index.js"}},"scripts":{"bench":"node test/benchmark/index.js","build":"tsc && tsc -p tsconfig.esm.json","lint":"prettier --check index.ts","format":"prettier --write index.ts","test":"node test/index.js","test:deno":"deno test test/deno.ts"},"sideEffects":false,"author":{"name":"Paul Miller","url":"https://paulmillr.com"},"license":"MIT","homepage":"https://paulmillr.com/noble/#scure","repository":{"type":"git","url":"git+https://github.com/paulmillr/scure-base.git"},"devDependencies":{"@paulmillr/jsbt":"0.1.0","micro-should":"0.4.0","prettier":"3.1.1","typescript":"5.3.2"},"keywords":["bech32","bech32m","base64","base58","base32","base16","rfc4648","rfc3548","crockford","encode","encoder","base-x","base"],"funding":"https://paulmillr.com/funding/","_id":"@scure/base@1.1.7","gitHead":"3648fd9d8f62f540b15617e124f13ac76ec4f075","bugs":{"url":"https://github.com/paulmillr/scure-base/issues"},"_nodeVersion":"20.14.0","_npmVersion":"10.8.1","dist":{"integrity":"sha512-PPNYBslrLNNUQ/Yad37MHYsNQtK67EhWb6WtSvNLLPo7SdVZgkUjD6Dg+5On7zNwmskf8OX7I7Nx5oN+MIWE0g==","shasum":"fe973311a5c6267846aa131bc72e96c5d40d2b30","tarball":"https://registry.npmjs.org/@scure/base/-/base-1.1.7.tgz","fileCount":11,"unpackedSize":121636,"attestations":{"url":"https://registry.npmjs.org/-/npm/v1/attestations/@scure%2fbase@1.1.7","provenance":{"predicateType":"https://slsa.dev/provenance/v1"}},"signatures":[{"keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA","sig":"MEUCID8LJ8b8FfoGOmdBrqPGzBzvdokGtIA9Y6QDV7fafz+BAiEAlG5b4+kqKHIeQiisQAC4viglueMeEKWpZUCs/+Bx0Tc="}]},"_npmUser":{"name":"paulmillr","email":"paul@paulmillr.com"},"directories":{},"maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"_npmOperationalInternal":{"host":"s3://npm-registry-packages","tmp":"tmp/base_1.1.7_1718313135189_0.17644726968116298"},"_hasShrinkwrap":false}},"time":{"created":"2022-01-17T23:19:05.838Z","modified":"2024-06-13T21:12:15.766Z","1.0.0-rc1":"2022-01-17T23:19:06.067Z","1.0.0":"2022-01-26T14:37:24.726Z","1.1.0":"2022-06-11T23:09:39.272Z","1.1.1":"2022-06-15T10:20:05.565Z","1.1.2":"2023-08-25T22:35:28.811Z","1.1.3":"2023-08-31T01:25:08.638Z","1.1.4":"2023-12-11T23:59:49.388Z","1.1.5":"2023-12-13T09:15:58.758Z","1.1.6":"2024-03-20T14:34:22.690Z","1.1.7":"2024-06-13T21:12:15.377Z"},"maintainers":[{"name":"paulmillr","email":"paul@paulmillr.com"}],"author":{"name":"Paul Miller","url":"https://paulmillr.com"},"repository":{"type":"git","url":"git+https://github.com/paulmillr/scure-base.git"},"keywords":["bech32","bech32m","base64","base58","base32","base16","rfc4648","rfc3548","crockford","encode","encoder","base-x","base"],"license":"MIT","homepage":"https://paulmillr.com/noble/#scure","bugs":{"url":"https://github.com/paulmillr/scure-base/issues"},"readme":"# scure-base\n\nAudited & minimal implementation of bech32, base64, base58, base32 & base16.\n\n- 🔒 [Audited](#security) by an independent security firm\n- 🔻 Tree-shaking-friendly: use only what's necessary, other code won't be included\n- 📦 ESM and common.js\n- ✍️ Written in [functional style](#design-rationale), easily composable\n- 💼 Matches specs\n  - [BIP173](https://en.bitcoin.it/wiki/BIP_0173), [BIP350](https://en.bitcoin.it/wiki/BIP_0350) for bech32 / bech32m\n  - [RFC 4648](https://datatracker.ietf.org/doc/html/rfc4648) (aka RFC 3548) for Base16, Base32, Base32Hex, Base64, Base64Url\n  - [Base58](https://www.ietf.org/archive/id/draft-msporny-base58-03.txt),\n    [Base58check](https://en.bitcoin.it/wiki/Base58Check_encoding),\n    [Base32 Crockford](https://www.crockford.com/base32.html)\n\nCheck out [Projects using scure-base](#projects-using-scure-base).\n\n### This library belongs to _scure_\n\n> **scure** — audited micro-libraries.\n\n- Zero or minimal dependencies\n- Highly readable TypeScript / JS code\n- PGP-signed releases and transparent NPM builds\n- Check out [homepage](https://paulmillr.com/noble/#scure) & all libraries:\n  [base](https://github.com/paulmillr/scure-base),\n  [bip32](https://github.com/paulmillr/scure-bip32),\n  [bip39](https://github.com/paulmillr/scure-bip39),\n  [btc-signer](https://github.com/paulmillr/scure-btc-signer),\n  [starknet](https://github.com/paulmillr/scure-starknet)\n\n## Usage\n\n> npm install @scure/base\n\nWe support all major platforms and runtimes. The library is hybrid ESM / Common.js package.\n\n```js\nimport { base16, base32, base64, base58 } from '@scure/base';\n// Flavors\nimport {\n  base58xmr,\n  base58xrp,\n  base32nopad,\n  base32hex,\n  base32hexnopad,\n  base32crockford,\n  base64nopad,\n  base64url,\n  base64urlnopad,\n} from '@scure/base';\n\nconst data = Uint8Array.from([1, 2, 3]);\nbase64.decode(base64.encode(data));\n\n// Convert utf8 string to Uint8Array\nconst data2 = new TextEncoder().encode('hello');\nbase58.encode(data2);\n\n// Everything has the same API except for bech32 and base58check\nbase32.encode(data);\nbase16.encode(data);\nbase32hex.encode(data);\n```\n\nbase58check is a special case: you need to pass `sha256()` function:\n\n```js\nimport { createBase58check } from '@scure/base';\ncreateBase58check(sha256).encode(data);\n```\n\nAlternative API:\n\n```js\nimport { str, bytes } from '@scure/base';\nconst encoded = str('base64', data);\nconst data = bytes('base64', encoded);\n```\n\n## Bech32, Bech32m and Bitcoin\n\nWe provide low-level bech32 operations.\nIf you need high-level methods for BTC (addresses, and others), use\n[scure-btc-signer](https://github.com/paulmillr/scure-btc-signer) instead.\n\nBitcoin addresses use both 5-bit words and bytes representations.\nThey can't be parsed using `bech32.decodeToBytes`. Instead, do something this:\n\n```ts\nconst decoded = bech32.decode(address);\n// NOTE: words in bitcoin addresses contain version as first element,\n// with actual witnes program words in rest\n// BIP-141: The value of the first push is called the \"version byte\".\n// The following byte vector pushed is called the \"witness program\".\nconst [version, ...dataW] = decoded.words;\nconst program = bech32.fromWords(dataW); // actual witness program\n```\n\nSame applies to Lightning Invoice Protocol\n[BOLT-11](https://github.com/lightning/bolts/blob/master/11-payment-encoding.md).\nWe have many tests in `./test/bip173.test.js` that serve as minimal examples of\nBitcoin address and Lightning Invoice Protocol parsers.\nKeep in mind that you'll need to verify the examples before using them in your code.\n\n## Design rationale\n\nThe code may feel unnecessarily complicated; but actually it's much easier to reason about.\nAny encoding library consists of two functions:\n\n```\nencode(A) -> B\ndecode(B) -> A\n  where X = decode(encode(X))\n  # encode(decode(X)) can be !== X!\n  # because decoding can normalize input\n\ne.g.\nbase58checksum = {\n  encode(): {\n    // checksum\n    // radix conversion\n    // alphabet\n  },\n  decode(): {\n    // alphabet\n    // radix conversion\n    // checksum\n  }\n}\n```\n\nBut instead of creating two big functions for each specific case,\nwe create them from tiny composamble building blocks:\n\n```\nbase58checksum = chain(checksum(), radix(), alphabet())\n```\n\nWhich is the same as chain/pipe/sequence function in Functional Programming,\nbut significantly more useful since it enforces same order of execution of encode/decode.\nBasically you only define encode (in declarative way) and get correct decode for free.\nSo, instead of reasoning about two big functions you need only reason about primitives and encode chain.\nThe design revealed obvious bug in older version of the lib,\nwhere xmr version of base58 had errors in decode's block processing.\n\nBesides base-encodings, we can reuse the same approach with any encode/decode function\n(`bytes2number`, `bytes2u32`, etc).\nFor example, you can easily encode entropy to mnemonic (BIP-39):\n\n```ts\nexport function getCoder(wordlist: string[]) {\n  if (!Array.isArray(wordlist) || wordlist.length !== 2 ** 11 || typeof wordlist[0] !== 'string') {\n    throw new Error('Worlist: expected array of 2048 strings');\n  }\n  return mbc.chain(mbu.checksum(1, checksum), mbu.radix2(11, true), mbu.alphabet(wordlist));\n}\n```\n\n### base58 is O(n^2) and radixes\n\n`Uint8Array` is represented as big-endian number:\n\n```\n[1, 2, 3, 4, 5] -> 1*(256**4) + 2*(256**3) 3*(256**2) + 4*(256**1) + 5*(256**0)\nwhere 256 = 2**8 (8 bits per byte)\n```\n\nwhich is then converted to a number in another radix/base (16/32/58/64, etc).\n\nHowever, generic conversion between bases has [quadratic O(n^2) time complexity](https://cs.stackexchange.com/q/21799).\n\nWhich means base58 has quadratic time complexity too. Use base58 only when you have small\nconstant sized input, because variable length sized input from user can cause DoS.\n\nOn the other hand, if both bases are power of same number (like `2**8 <-> 2**64`),\nthere is linear algorithm. For now we have implementation for power-of-two bases only (radix2).\n\n## Security\n\nThe library has been independently audited:\n\n- at version 1.0.0, in Jan 2022, by [cure53](https://cure53.de)\n  - PDFs: [online](https://cure53.de/pentest-report_hashing-libs.pdf), [offline](./audit/2022-01-05-cure53-audit-nbl2.pdf)\n  - [Changes since audit](https://github.com/paulmillr/scure-base/compare/1.0.0..main).\n  - The audit has been funded by [Ethereum Foundation](https://ethereum.org/en/) with help of [Nomic Labs](https://nomiclabs.io)\n\nThe library was initially developed for [js-ethereum-cryptography](https://github.com/ethereum/js-ethereum-cryptography).\nAt commit [ae00e6d7](https://github.com/ethereum/js-ethereum-cryptography/commit/ae00e6d7d24fb3c76a1c7fe10039f6ecd120b77e),\nit was extracted to a separate package called `micro-base`.\nAfter the audit we've decided to use `@scure` NPM namespace for security.\n\n## Resources\n\n### Projects using scure-base\n\n- [scure-btc-signer](https://github.com/paulmillr/scure-btc-signer)\n- [prefixed-api-key](https://github.com/truestamp/prefixed-api-key):\n  A re-write of seamapi/prefixed-api-key that enhances the\n  cryptographic security properties and safety when verifying a key. The keys and verifiers\n  of these two libraries are not compatible.\n  [Motivating post on the issues with using JWT from fly.io](https://fly.io/blog/api-tokens-a-tedious-survey/)\n- [coinspace](https://github.com/CoinSpace/CoinSpace) wallet and its modules:\n  [ada](https://github.com/CoinSpace/cs-cardano-wallet),\n  [btc](https://github.com/CoinSpace/cs-bitcoin-wallet)\n  [eos](https://github.com/CoinSpace/cs-eos-wallet),\n  [sol](https://github.com/CoinSpace/cs-solana-wallet),\n  [xmr](https://github.com/CoinSpace/cs-monero-wallet)\n\n## License\n\nMIT (c) Paul Miller [(https://paulmillr.com)](https://paulmillr.com), see LICENSE file.\n","readmeFilename":"README.md"}